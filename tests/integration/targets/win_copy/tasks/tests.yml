---
- name: Fail no source or content
  ansible.windows.win_copy:
    dest: dest
  register: fail_no_source_content
  failed_when: fail_no_source_content.msg != 'src (or content) and dest are required'

- name: Fail content but dest isn't a file, unix ending
  ansible.windows.win_copy:
    content: a
    dest: a/
  register: fail_dest_not_file_unix
  failed_when: fail_dest_not_file_unix.msg != 'dest must be a file if content is defined'

- name: Fail content but dest isn't a file, windows ending
  ansible.windows.win_copy:
    content: a
    dest: a\
  register: fail_dest_not_file_windows
  failed_when: fail_dest_not_file_windows.msg != 'dest must be a file if content is defined'

- name: Fail to copy a file with parent dir that doesn't exist and filename is set
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\missing-dir\foo.txt'
  register: fail_missing_parent_dir
  failed_when: "'does not exist' not in fail_missing_parent_dir.msg"

- name: Fail to copy an encrypted file without the password set
  ansible.windows.win_copy:
    src: '{{ role_path }}/files-different/vault/vault-file'
    dest: '{{ test_win_copy_path }}\file'
  register: fail_copy_encrypted_file
  ignore_errors: true # weird failed_when doesn't work in this case

- name: Assert failure message when copying an encrypted file without the password set
  ansible.builtin.assert:
    that:
      - fail_copy_encrypted_file is failed
      - fail_copy_encrypted_file.msg == 'A vault password or secret must be specified to decrypt {{ role_path }}/files-different/vault/vault-file'

- name: Fail to copy a directory with an encrypted file without the password
  ansible.windows.win_copy:
    src: '{{ role_path }}/files-different/vault'
    dest: '{{ test_win_copy_path }}'
  register: fail_copy_directory_with_enc_file
  ignore_errors: true

- name: Assert failure message when copying a directory that contains an encrypted file without the password set
  ansible.builtin.assert:
    that:
      - fail_copy_directory_with_enc_file is failed
      - fail_copy_directory_with_enc_file.msg == 'A vault password or secret must be specified to decrypt {{ role_path }}/files-different/vault/vault-file'

- name: Copy with content (check mode)
  ansible.windows.win_copy:
    content: a
    dest: '{{ test_win_copy_path }}\file'
  register: copy_content_check
  check_mode: true

- name: Get result of copy with content (check mode)
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\file'
  register: copy_content_actual_check

- name: Assert copy with content (check mode)
  ansible.builtin.assert:
    that:
      - copy_content_check is changed
      - copy_content_check.checksum == '86f7e437faa5a7fce15d1ddcb9eaeaea377667b8'
      - copy_content_check.operation == 'file_copy'
      - copy_content_check.size == 1
      - copy_content_actual_check.stat.exists == False

- name: Copy with content
  ansible.windows.win_copy:
    content: a
    dest: '{{ test_win_copy_path }}\file'
  register: copy_content

- name: Get result of copy with content
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\file'
  register: copy_content_actual

- name: Assert copy with content
  ansible.builtin.assert:
    that:
      - copy_content is changed
      - copy_content.checksum == '86f7e437faa5a7fce15d1ddcb9eaeaea377667b8'
      - copy_content.operation == 'file_copy'
      - copy_content.size == 1
      - copy_content_actual.stat.exists == True
      - copy_content_actual.stat.checksum == '86f7e437faa5a7fce15d1ddcb9eaeaea377667b8'

- name: Copy with content (idempotent)
  ansible.windows.win_copy:
    content: a
    dest: '{{ test_win_copy_path }}\file'
  register: copy_content_again

- name: Assert copy with content (idempotent)
  ansible.builtin.assert:
    that:
      - copy_content_again is not changed

- name: Copy with content change when missing
  ansible.windows.win_copy:
    content: b
    dest: '{{ test_win_copy_path }}\file'
    force: false
  register: copy_content_when_missing

- name: Assert copy with content change when missing
  ansible.builtin.assert:
    that:
      - copy_content_when_missing is not changed

- name: Copy single file (check mode)
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\foo-target.txt'
  register: copy_file_check
  check_mode: true

- name: Get result of copy single file (check mode)
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\foo-target.txt'
  register: copy_file_actual_check

- name: Assert copy single file (check mode)
  ansible.builtin.assert:
    that:
      - copy_file_check is changed
      - copy_file_check.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'
      - copy_file_check.dest == test_win_copy_path + '\\foo-target.txt'
      - copy_file_check.operation == 'file_copy'
      - copy_file_check.size == 8
      - copy_file_actual_check.stat.exists == False

- name: Copy single file
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\foo-target.txt'
  register: copy_file

- name: Get result of copy single file
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\foo-target.txt'
  register: copy_file_actual

- name: Assert copy single file
  ansible.builtin.assert:
    that:
      - copy_file is changed
      - copy_file.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'
      - copy_file.dest == test_win_copy_path + '\\foo-target.txt'
      - copy_file.operation == 'file_copy'
      - copy_file.size == 8
      - copy_file_actual.stat.exists == True
      - copy_file_actual.stat.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'

- name: Copy single file (idempotent)
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\foo-target.txt'
  register: copy_file_again

- name: Assert copy single file (idempotent)
  ansible.builtin.assert:
    that:
      - copy_file_again is not changed

- name: Copy single file (backup)
  ansible.windows.win_copy:
    content: "{{ lookup('file', 'foo.txt') }}\nfoo bar"
    dest: '{{ test_win_copy_path }}\foo-target.txt'
    backup: true
  register: copy_file_backup

- name: Check backup_file
  ansible.windows.win_stat:
    path: '{{ copy_file_backup.backup_file }}'
  register: backup_file

- name: Assert copy single file (backup)
  ansible.builtin.assert:
    that:
      - copy_file_backup is changed
      - backup_file.stat.exists == true

- name: Copy single file to folder (check mode)
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\'
  register: copy_file_to_folder_check
  check_mode: true

- name: Get result of copy single file to folder (check mode)
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\foo.txt'
  register: copy_file_to_folder_actual_check

- name: Assert copy single file to folder (check mode)
  ansible.builtin.assert:
    that:
      - copy_file_to_folder_check is changed
      - copy_file_to_folder_check.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'
      - copy_file_to_folder_check.dest == test_win_copy_path + '\\foo.txt'
      - copy_file_to_folder_check.operation == 'file_copy'
      - copy_file_to_folder_check.size == 8
      - copy_file_to_folder_actual_check.stat.exists == False

- name: Copy single file to folder
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\'
  register: copy_file_to_folder

- name: Get result of copy single file to folder
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\foo.txt'
  register: copy_file_to_folder_actual

- name: Assert copy single file to folder
  ansible.builtin.assert:
    that:
      - copy_file_to_folder is changed
      - copy_file_to_folder.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'
      - copy_file_to_folder.dest == test_win_copy_path + '\\foo.txt'
      - copy_file_to_folder.operation == 'file_copy'
      - copy_file_to_folder.size == 8
      - copy_file_to_folder_actual.stat.exists == True
      - copy_file_to_folder_actual.stat.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'

- name: Copy single file to folder (idempotent)
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\'
  register: copy_file_to_folder_again

- name: Assert copy single file to folder (idempotent)
  ansible.builtin.assert:
    that:
      - copy_file_to_folder_again is not changed

- name: Copy single file to missing folder (check mode)
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\missing\'
  register: copy_file_to_missing_folder_check
  check_mode: true

- name: Get result of copy single file to missing folder (check mode)
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\missing\foo.txt'
  register: copy_file_to_missing_folder_actual_check

- name: Assert copy single file to missing folder (check mode)
  ansible.builtin.assert:
    that:
      - copy_file_to_missing_folder_check is changed
      - copy_file_to_missing_folder_check.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'
      - copy_file_to_missing_folder_check.operation == 'file_copy'
      - copy_file_to_missing_folder_check.size == 8
      - copy_file_to_missing_folder_actual_check.stat.exists == False

- name: Copy single file to missing folder
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\missing\'
  register: copy_file_to_missing_folder

- name: Get result of copy single file to missing folder
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\missing\foo.txt'
  register: copy_file_to_missing_folder_actual

- name: Assert copy single file to missing folder
  ansible.builtin.assert:
    that:
      - copy_file_to_missing_folder is changed
      - copy_file_to_missing_folder.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'
      - copy_file_to_missing_folder.operation == 'file_copy'
      - copy_file_to_missing_folder.size == 8
      - copy_file_to_missing_folder_actual.stat.exists == True
      - copy_file_to_missing_folder_actual.stat.checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'

- name: Copy folder (check mode)
  ansible.windows.win_copy:
    src: files
    dest: '{{ test_win_copy_path }}\recursive\folder'
  register: copy_folder_check
  check_mode: true

- name: Get result of copy folder (check mode)
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\recursive\folder'
  register: copy_folder_actual_check

- name: Assert copy folder (check mode)
  ansible.builtin.assert:
    that:
      - copy_folder_check is changed
      - copy_folder_check.operation == 'folder_copy'
      - copy_folder_actual_check.stat.exists == False

- name: Copy folder
  ansible.windows.win_copy:
    src: files
    dest: '{{ test_win_copy_path }}\recursive\folder'
  register: copy_folder

- name: Get result of copy folder
  ansible.windows.win_find:
    paths: '{{ test_win_copy_path }}\recursive\folder'
    recurse: true
    file_type: directory
  register: copy_folder_actual

- name: Assert copy folder
  ansible.builtin.assert:
    that:
      - copy_folder is changed
      - copy_folder.operation == 'folder_copy'
      - copy_folder_actual.examined == 11 # includes files and folders, the below is the nested order
      - copy_folder_actual.matched == 6
      - copy_folder_actual.files[0].filename == 'files'
      - copy_folder_actual.files[1].filename == 'subdir'
      - copy_folder_actual.files[2].filename == 'empty'
      - copy_folder_actual.files[3].filename == 'subdir2'
      - copy_folder_actual.files[4].filename == 'subdir3'
      - copy_folder_actual.files[5].filename == 'subdir4'

- name: Copy folder (idempotent)
  ansible.windows.win_copy:
    src: files
    dest: '{{ test_win_copy_path }}\recursive\folder'
  register: copy_folder_again

- name: Assert copy folder (idempotent)
  ansible.builtin.assert:
    that:
      - copy_folder_again is not changed

- name: Change the text of a file in the remote source
  ansible.windows.win_copy:
    content: bar.txt
    dest: '{{ test_win_copy_path }}\recursive\folder\files\foo.txt'

- name: Remove folder for test of recursive copy
  ansible.windows.win_file:
    path: '{{ test_win_copy_path }}\recursive\folder\files\subdir\subdir2\subdir3\subdir4'
    state: absent

- name: Copy folder after changes
  ansible.windows.win_copy:
    src: files
    dest: '{{ test_win_copy_path }}\recursive\folder'
  register: copy_folder_after_change

- name: Get result of copy folder after changes
  ansible.windows.win_find:
    paths: '{{ test_win_copy_path }}\recursive\folder\files'
    recurse: true
    patterns: ['foo.txt', 'qux.txt']
  register: copy_folder_after_changes_actual

- name: Assert copy folder after changes
  ansible.builtin.assert:
    that:
      - copy_folder_after_change is changed
      - copy_folder_after_changes_actual.matched == 2
      - copy_folder_after_changes_actual.files[0].checksum == 'c79a6506c1c948be0d456ab5104d5e753ab2f3e6'
      - copy_folder_after_changes_actual.files[1].checksum == 'b54ba7f5621240d403f06815f7246006ef8c7d43'

- name: Copy folder's contents (check mode)
  ansible.windows.win_copy:
    src: files/
    dest: '{{ test_win_copy_path }}\recursive-contents\'
  register: copy_folder_contents_check
  check_mode: true

- name: Get result of copy folder'scontents (check mode)
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\recursive-contents'
  register: copy_folder_contents_actual_check

- name: Assert copy folder's contents (check mode)
  ansible.builtin.assert:
    that:
      - copy_folder_contents_check is changed
      - copy_folder_contents_check.operation == 'folder_copy'
      - copy_folder_contents_actual_check.stat.exists == False

- name: Copy folder's contents
  ansible.windows.win_copy:
    src: files/
    dest: '{{ test_win_copy_path }}\recursive-contents\'
  register: copy_folder_contents

- name: Get result of copy folder
  ansible.windows.win_find:
    paths: '{{ test_win_copy_path }}\recursive-contents'
    recurse: true
    file_type: directory
  register: copy_folder_contents_actual

- name: Assert copy folder
  ansible.builtin.assert:
    that:
      - copy_folder_contents is changed
      - copy_folder_contents.operation == 'folder_copy'
      - copy_folder_contents_actual.examined == 10 # includes files and folders, the below is the nested order
      - copy_folder_contents_actual.matched == 5
      - copy_folder_contents_actual.files[0].filename == 'subdir'
      - copy_folder_contents_actual.files[1].filename == 'empty'
      - copy_folder_contents_actual.files[2].filename == 'subdir2'
      - copy_folder_contents_actual.files[3].filename == 'subdir3'
      - copy_folder_contents_actual.files[4].filename == 'subdir4'

- name: Remove single file in folder before next test
  ansible.windows.win_file:
    path: '{{ test_win_copy_path }}\recursive-contents\subdir\bar.txt'
    state: absent

- name: Copy folder contents with single file changed to folder
  ansible.windows.win_copy:
    src: files/
    dest: '{{ test_win_copy_path }}\recursive-contents\'
  register: copy_folder_single_change

- name: Get result of copy folder contents with single file changed to folder
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\recursive-contents\subdir\bar.txt'
  register: copy_folder_single_change_actual

- name: Assert copy folder contents with single file changed to folder
  ansible.builtin.assert:
    that:
      - copy_folder_single_change is changed
      - copy_folder_single_change.operation == 'folder_copy'
      - copy_folder_single_change_actual.stat.exists

- name: Remove foo.txt before next test
  ansible.windows.win_file:
    path: '{{ test_win_copy_path }}\recursive-contents\foo.txt'
    state: absent

- name: Copy file to a folder
  ansible.windows.win_copy:
    src: foo.txt
    dest: '{{ test_win_copy_path }}\recursive-contents'
  register: file_to_folder

- name: Get result of copy file to folder
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\recursive-contents\foo.txt'
  register: file_to_folder_actual

- name: Assert copy file to a folder
  ansible.builtin.assert:
    that:
      - file_to_folder is changed
      - file_to_folder_actual.stat.exists

- name: Fail to copy folder to a file
  ansible.windows.win_copy:
    src: subdir/
    dest: '{{ test_win_copy_path }}\recursive-contents\foo.txt'
  register: fail_folder_to_file
  failed_when: "'object at parent directory path is already a file' not in fail_folder_to_file.msg"

# https://github.com/ansible/ansible/issues/31336
- name: Create file with colon in the name
  ansible.builtin.copy:
    dest: '{{ role_path }}/files-different/colon:file'
    content: test
    mode: '0644'
  delegate_to: localhost

- name: Copy a file with colon as a source
  ansible.windows.win_copy:
    src: '{{ role_path }}/files-different/colon:file'
    dest: '{{ test_win_copy_path }}\colon.file'
  register: copy_file_with_colon

- name: Get result of file with colon as a source
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\colon.file'
  register: copy_file_with_colon_result

- name: Assert results of copy a file with colon as a source
  ansible.builtin.assert:
    that:
      - copy_file_with_colon is changed
      - copy_file_with_colon_result.stat.exists == True
      - copy_file_with_colon_result.stat.checksum == "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"

- name: Remove file with colon in the name
  ansible.builtin.file:
    path: '{{ role_path }}/files-different/colon:file'
    state: absent
  delegate_to: localhost

- name: Copy an encrypted file without decrypting
  ansible.windows.win_copy:
    src: '{{ role_path }}/files-different/vault/vault-file'
    dest: '{{ test_win_copy_path }}\vault-file'
    decrypt: false
  register: copy_encrypted_file

- name: Get stat of copied encrypted file without decrypting
  ansible.windows.win_stat:
    path: '{{ test_win_copy_path }}\vault-file'
  register: copy_encrypted_file_result

- name: Assert result of copy an encrypted file without decrypting
  ansible.builtin.assert:
    that:
      - copy_encrypted_file is changed
      - copy_encrypted_file_result.stat.checksum == "74a89620002d253f38834ee5b06cddd28956a43d"

- name: Copy an encrypted file without decrypting (idempotent)
  ansible.windows.win_copy:
    src: '{{ role_path }}/files-different/vault/vault-file'
    dest: '{{ test_win_copy_path }}\vault-file'
    decrypt: false
  register: copy_encrypted_file_again

- name: Assert result of copy an encrypted file without decrypting (idempotent)
  ansible.builtin.assert:
    that:
      - copy_encrypted_file_again is not changed

- name: Copy folder with encrypted files without decrypting
  ansible.windows.win_copy:
    src: '{{ role_path }}/files-different/vault/'
    dest: '{{ test_win_copy_path }}\encrypted-test'
    decrypt: false
  register: copy_encrypted_file

- name: Get result of copy folder with encrypted files without decrypting
  ansible.windows.win_find:
    paths: '{{ test_win_copy_path }}\encrypted-test'
    recurse: true
    patterns: '*vault*'
  register: copy_encrypted_file_result

- name: Assert result of copy folder with encrypted files without decrypting
  ansible.builtin.assert:
    that:
      - copy_encrypted_file is changed
      - copy_encrypted_file_result.files|count == 2
      - copy_encrypted_file_result.files[0].checksum == "834563c94127730ecfa42dfc1e1821bbda2e51da"
      - copy_encrypted_file_result.files[1].checksum == "74a89620002d253f38834ee5b06cddd28956a43d"

- name: Copy folder with encrypted files without decrypting (idempotent)
  ansible.windows.win_copy:
    src: '{{ role_path }}/files-different/vault/'
    dest: '{{ test_win_copy_path }}\encrypted-test'
    decrypt: false
  register: copy_encrypted_file_again

- name: Assert result of copy folder with encrypted files without decrypting (idempotent)
  ansible.builtin.assert:
    that:
      - copy_encrypted_file_again is not changed

- name: Remove test folder after local to remote tests
  ansible.windows.win_file:
    path: '{{ test_win_copy_path }}'
    state: absent
